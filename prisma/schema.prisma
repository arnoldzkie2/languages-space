generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

// client schema area

model Client {
  id           String   @id @default(uuid())
  profile      String?  @db.Text
  name         String
  user_name    String   @unique
  phone_number String?
  email        String?
  gender       String?
  card         Json?
  organization String?
  password     String
  address      String?
  origin       Json?
  note         String?
  date         DateTime @default(now())
  departments  Json?
}

model ClientCard {
  id                String   @id @default(uuid())
  departments       Json
  name              String
  price             String
  balance           String
  validity          String
  invoice           Boolean
  repeat_purchases  Boolean
  online_purchases  Boolean
  online_renews     Boolean
  settlement_period Int
  date              DateTime @default(now())
}

// supplier schema area

model Supplier {
  id                  String         @id @default(uuid())
  profile             String?
  name                String
  user_name           String         @unique
  organization        Json?
  payment_information Json?
  phone_number        String?
  password            String?
  email               String?
  address             String?
  gender              String?
  card                Json?
  tags                SupplierTags[]
  origin              String?
  note                String?
  employment_status   String?
  entry               DateTime
  departure           DateTime
  date                DateTime       @default(now())
  departments         Json?
}

model SupplierTags {
  id         String    @id @default(uuid())
  name       String
  date       DateTime  @default(now())
  supplier   Supplier? @relation(fields: [suplier_id], references: [id])
  suplier_id String?
}

model SupplierCard {
  id   String             @id @default(uuid())
  name SupplierCardType[]
  type Json
}

model SupplierCardType {
  id             String        @id @default(uuid())
  SupplierCard   SupplierCard? @relation(fields: [supplierCardId], references: [id])
  supplierCardId String?
  fixed_salary   Json?
  commission     Json?
}

// agent schema area

model Agent {
  id                  String   @id @default(uuid())
  profile             String?
  name                String
  user_name           String   @unique
  password            String
  organization        Json?
  payment_information Json?
  phone_number        String?
  email               String?
  address             String?
  gender              String?
  card                Json?
  origin              String
  note                String?
  date                DateTime @default(now())
  departments         Json?
}

model AgentCard {
  id   String @id @default(uuid())
  type Json
  name String
  link String
}

// order schema area 

model Order {
  id             String   @id @unique @default(uuid())
  booking_date   DateTime @default(now())
  name           String
  client_name    String
  card           Json
  quantity       Int
  price          Float
  operator       String
  note           String?
  status         String
  invoice_number Int
  express_number Int
  date           DateTime @default(now())
  departments    Json
}

// admin schema area

model Admin {
  id          String   @id @default(uuid())
  name        String
  user_name   String   @unique
  email       String
  password    String
  date        DateTime @default(now())
  departments Json?
}

model SuperAdmin {
  id        String   @id @default(uuid())
  name      String
  user_name String   @unique
  email     String?  @unique
  password  String
  date      DateTime @default(now())
}

model Department {
  id   String   @id @default(uuid())
  name String
  date DateTime @default(now())
}

model News {
  id          String   @id @default(uuid())
  departments Json?
  title       String
  author      String
  keywords    Json?
  content     String   @db.Text
  date        DateTime @default(now())
}
